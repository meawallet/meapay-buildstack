# Controls when the workflow will run
on:
  workflow_call:
    inputs:
      image_name:
        required: true
        type: string
      image_version:
        required: true
        type: string
      ecs_service:
        required: true
        type: string
      ecs_cluster:
        required: true
        type: string
      slack_channel_id:
        required: true
        type: string
    secrets:
      aws_account_id:
        description: 'AWS_ACCOUNT_ID'
        required: true
      aws_access_key_id:
        description: 'AWS_ACCESS_KEY_ID'
        required: true
      aws_secret_access_key_id:
        description: 'AWS_SECRET_ACCESS_KEY'
        required: true
      slack_bot_token:
        description: 'SLACK_BOT_TOKEN'
        required: true


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  aws-deployment:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.aws_access_key_id }}
          aws-secret-access-key: ${{ secrets.aws_secret_access_key_id }}
          aws-region: eu-central-1

      - name: Download AWS ECS deplyment task definition
        if: ${{ success() && inputs.ecs_service != 0 && inputs.ecs_cluster != 0 }}
        run: |
          aws ecs describe-task-definition --task-definition ${{ inputs.ecs_service }} --query taskDefinition > task-definition.json

      - name: Fill in the new image ID in the Amazon ECS task definition
        if: ${{ success() && inputs.ecs_service != 0 && inputs.ecs_cluster != 0 }}
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: app
          image: ${{ inputs.image_name }}:${{ inputs.image_version }}

      - name: Deploy Amazon ECS task definition
        if: ${{ success() && inputs.ecs_service != 0 && inputs.ecs_cluster != 0 }}
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: task-definition.json
          service: ${{ inputs.ecs_service }}
          cluster: ${{ inputs.ecs_cluster }}
          wait-for-service-stability: true

      - name: Post to a Slack channel
        id: slack
        if: ${{ failure() && inputs.slack_channel_id != 0 }}
        env:
          SLACK_BOT_TOKEN: ${{ secrets.slack_bot_token }}
        uses: slackapi/slack-github-action@v1.16.0
        with:
          channel-id: ${{ inputs.slack_channel_id }}  # Slack channel id or user id to post message. https://api.slack.com/methods/chat.postMessage#channels
          slack-message: Deployment failed https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}

