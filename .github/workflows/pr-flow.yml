# Controls when the workflow will run
on:
  workflow_call:
    inputs:
      build_command:
        required: true
        type: string
      itest_command:
        required: false
        type: string
      test_results_files:
        required: true
        type: string
      spotbugs_results_files:
        required: false
        type: string
    secrets:
      maven_repo_access_token:
        description: 'Maven repo access token'
        required: true


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 11

      # Runs a set of commands using the runners shell
      - name: Preparing build
        if: hashFiles('local.properties-template') != ''
        env:
          MAVEN_REPO_PAT: ${{ secrets.maven_repo_access_token }}
        run: |
          # Configuring credentials for Gradle connection to Azure Artifacts
          sed -i "s/PERSONAL_ACCESS_TOKEN/$MAVEN_REPO_PAT/g" local.properties-template
          mv local.properties-template local.properties
      - name: Build project
        uses: gradle/gradle-build-action@v2
        with:
          arguments: ${{ inputs.build_command }}
      - name: Publish spotbugs results
        uses: jwgmeligmeyling/spotbugs-github-action@master
        if: ${{ inputs.spotbugs_results_files != 0 }}
        with:
          path: ${{ inputs.spotbugs_results_files }}
      - name: Run integration tests
        env:
          SPRING_PROFILES_ACTIVE: 'itest,ci'
        uses: gradle/gradle-build-action@v2
        if: ${{ inputs.itest_command != 0 }}
        with:
          arguments: ${{ inputs.itest_command }}
      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: ${{ inputs.test_results_files }}